name : Deployment

on:
  workflow_run:
    workflows: [Integration]
    types: [completed]
    branches: [main]
  workflow_dispatch:

permissions:
  packages: write

env:
  REGISTRY: ghcr.io
  TF_DIRECTORY: infrastructure/terraform

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        sparse-checkout: |
          .github
          src
    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ github.workspace }}/src
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ github.repository }}:0.0.${{ github.run_id }}
          ${{ env.REGISTRY }}/${{ github.repository }}:latest
  update-infrastructure:
    runs-on: ubuntu-latest
    environment: production
    env:
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Terraform init
      working-directory: ${{ env.TF_DIRECTORY }}
      shell: pwsh
      run: terraform init -backend-config="resource_group_name=${{ vars.TF_STATE_RESOURCE_GROUP_NAME }}" -backend-config="storage_account_name=${{ vars.TF_STATE_STORAGE_ACCOUNT_NAME }}"
    - name: Terraform plan
      working-directory: ${{ env.TF_DIRECTORY }}
      shell: pwsh
      run: terraform plan -input=false -var-file="${{ github.workspace}}/infrastructure/deployments/${{ vars.ENVIRONMENT_SHORT }}/.tfvars" -out="tfplan"
    - name: Terraform apply
      working-directory: ${{ env.TF_DIRECTORY }}
      shell: pwsh
      run: terraform apply -auto-approve -input=false tfplan
